#!/bin/bash

#--------------------------------------
#	System Report
#--------------------------------------

#gets the hostname of the system.
hostName=$(hostname)

#gets the current user executing the script.
userName=$USER

#Current date and time. 
currentDate=$(date)

#--------------------------------------
#	System Information
#--------------------------------------

#Command to get the distribution name and version. 
opSys=$(cat /etc/os-release | grep PRETTY_NAME | awk -F= '{gsub(/"/, "", $2); print $2}')

#Command to get the system's uptime in a human readable format.
upTime=$(uptime -p)

#Command to get the CPU Model Name.
#Essential Commands Used:
#	lscpu - prints CPU architecture info
#	grep - finds the "Model name" line
#	awk -F: - splits by ':' and takes the second part (the name)
#	sed 's/^ *//' - removes leading spaces
cpuName=$(lscpu | grep "Model name" | awk -F: '{print $2}' | sed 's/^ *//')

#Command to get the total RAM (in Kilobyte).
#Essential Commands Used:
#	free - shows memory usage
#	grep Mem: - selects the main memory line
#	awk {'print $2'} - gets the second column
ramInfo=$(free | grep Mem: | awk {'print $2'})

#Command to display the make, model, and size of the disks - sra, sr0, and sr1.
#Essential Commands Used:
#	lsblk -d -o - lists only disk devices, showing columns: NAME, MODEL, SIZE
#	awk - filters only the header and lines matching sda, sr0, or sr1
#	NR==1 - this ensures that the header is still included
diskInfo=$(lsblk -d -o NAME,MODEL,SIZE | awk 'NR==1 || $1 ~ /^(sda|sr0|sr1)$/')

#Command to get the video card model.
#Essential Commands Used:
#	lspci - lists PCI devices
#	grep -i - finds VGA/3D/display lines (case-insensitive)
#	sed - removes everything up to and including the colon
videoCard=$(lspci | grep -i 'vga\|3d\|display' | sed -E 's/.*: //')

#Command to get the IP address of the interface connected to the default gateway.
#Essential Commands Used:
#	ip route | awk - finds the default interface (e.g., ens33)
#	ip -o -f inet addr show - shows IP details in a parsable format
#	awk '{print $4}' - extracts the IP/CIDR
hostAddress=$(ip -o -f inet addr show "$(ip route | awk '/default/ {print $5}')" | awk '{print $4}')

#Command to get the default gateway IP.
#Essential Commands Used:
#	ip route - shows the routing table
#	awk '/default/' {'print $2'} - extracts the 3rd column from the 'default' route line
defGateway=$(ip route | awk '/default/ {print $3}')

#Command to get the DNS server IP address from resolv.conf.
#Essential Commands Used:
#	grep nameserver - finds the line starting with nameserver
#	awk - extracts the IP address
dnsServer=$(cat /etc/resolv.conf | grep nameserver | awk {'print $2'})

#--------------------------------------
#	System Status
#--------------------------------------

#Command to pull up the currently logged-in user while making sure there are no duplicates. 
#Essential Commands Used:
#	who - lists logged-in users
#	"sort" and then "uniq" - removes duplicates
loggedUser=$(who | awk {'print $1'} | sort | uniq)

#Command to show available disk space.
#Essential Commands Used:
#	df -h - shows disk usage in human-readable format
#	--output=target,avail - restricts to mount point and available space
#	-x tmpfs -x devtmpfs - excludes virtual filesystems
diskSpace=$(df -h --output=target,avail -x tmpfs -x devtmpfs)

#Command to count all the running processes.
#Essential Commands Used:
#	ps aux - lists all running processes
#	wc -l - counts the number of lines (i.e., processes)
processCount=$(ps aux | wc -l)

#Command to get the system load averages for the past 1, 5, and 15 minutes.
#Essential Commands Used:
#	uptime - shows system load
loadAvrg=$(uptime | awk -F'load average: ' '{print $2}')

#Command to get the list of listening network ports.
#Essential Commands Used:
#	netstat -tuln - shows TCP/UDP ports (numeric)
#	grep - keeps the header (thus using ^) and listening ports only
netPorts=$(netstat -tuln | grep -E '^Proto|LISTEN')


#Command to get the status of the Uncomplicated Firewall (UFW).
#Essential Commands Used:
#	ufw status - shows whether firewall is active
ufwstat=$(sudo ufw status | awk {'print $2'})

cat <<EOF

System Report for $hostName generated by $userName, on $currentDate

System Information
------------------

OS: $opSys

Uptime: $upTime

CPU: $cpuName

RAM: $ramInfo

Disk(s):
$diskInfo

Video: $videoCard

Host Address: $hostAddress

Gateway IP: $defGateway

DNS Server: $dnsServer
 
System Status
-------------

Users Logged In: $loggedUser

Disk Space:
$diskSpace

Process Count: $processCount

Load Averages: $loadAvrg

Listening Network Ports:
$netPorts

UFW Status: $ufwstat

EOF
